static int chunked_load(int s, char **buf, int *total, char **bodystart, int bufsize) {
  char *chunkbuf = NULL, *pos = NULL, *tmp = NULL;
  int chunkbufsize = BUF_INIT_SIZE;
  int chunksize, remaining, data_recvd = 0, n;

  printf("Loading chunks...\n");

  if ((chunkbuf = malloc(BUF_INIT_SIZE)) == NULL)
    return -1;

  pos = *bodystart;
  /* At start of loop:
     pos points into buf at the beginning of the chunk size
     data_recvd = total actual chunk data received so far
  */
  for (;;) {
    chunksize = strtol(pos, &pos, 16); //pos = end of chunksize
    if (chunksize == 0)
      break; //last chunk
    
    if ((pos = strstr(pos, "\r\n")) == NULL) {
      fprintf(stderr, "chunked_load: malformed message body received from host\n");
      return -1;
    }
    pos += strlen("\r\n"); //pos now points at beginning of chunk data
    
    remaining = (chunksize - ((*buf + *total) - pos));
    if (remaining > 0) {
      data_recvd += (*buf + *total) - pos;
    } else {
      data_recvd += chunksize;
    }

    if (remaining > (bufsize - *total)) {
      //need more space in main buffer for remainder of chunk
      int tmpoffs1 = *bodystart - *buf;
      int tmpoffs2 = pos - *buf;
      if ((tmp = realloc(*buf, bufsize += remaining + 1)) == NULL)
	return -1;
      *buf = tmp;
      *bodystart = (*buf) + tmpoffs1;
      pos = (*buf) + tmpoffs2;
    }
  
    while (remaining > 0) {
      assert(remaining <= bufsize - *total);
      if ((n = recv(s, *buf + *total, remaining, 0)) < 0)
	return -1;
      *total += n;
      remaining -= n;
      data_recvd += n;
    }

    while (data_recvd > chunkbufsize) {
      //need more space in chunk buffer before copying
      if ((tmp = realloc(chunkbuf, chunkbufsize += REALLOC_INCR)) == NULL)
	return -1;
      chunkbuf = tmp;
    }
	
    memcpy(chunkbuf + (data_recvd - chunksize), pos, chunksize);
    pos += chunksize;
    pos += strlen("\r\n"); //terminating crlf on chunk

    //get start of next chunk and go again
    int tmpoffs1 = *bodystart - *buf;
    int tmpoffs2 = pos - *buf;
    if ((tmp = realloc(*buf, bufsize += REALLOC_INCR + 1)) == NULL)
      return -1;
    *buf = tmp;
    *bodystart = (*buf) + tmpoffs1;
    pos = (*buf) + tmpoffs2;

    if ((n = recv(s, *buf + *total, REALLOC_INCR, 0)) < 0)
      return -1;
    *total += n;

    assert(pos < (*buf + bufsize) && pos >= *buf);
    assert(*bodystart < (*buf + bufsize) && *bodystart >= *buf);
    assert(chunkbufsize >= data_recvd);
    assert(bufsize >= *total);
  }
  
  memcpy(*bodystart, chunkbuf, data_recvd);
  (*buf)[(*bodystart - *buf) + data_recvd] = '\0'; //terminate properly and cut off trailer etc
  free(chunkbuf);
  return 0;
}